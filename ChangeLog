2004-01-29 Andrew S. Townley <atownley>
	* Removed core library dependency on Jaxor.  Added new
	  extension concept to allow the core classes to vary
	  independently of Jaxor (or any other 3rd-party) while
	  still allowing backward-compatible deployment for
	  previous versions.

2004-01-28 Andrew S. Townley <atownley>
	* java/com/townleyenterprises/command/CommandParser.java

	  Added support for arbitrary header and footer blocks
	  to be printed when the help message is printed.
	
	* java/com/townleyenterprises/command/CommandParser.java
	  java/com/townleyenterprises/command/JoinedCommandOption.java
	  java/com/townleyenterprises/command/PosixCommandOption.java

	  Added first round of support for handling POSIX-compliant
	  command options, including joined options and option
	  expansion of combined options.

2004-01-27 Andrew S. Townley <atownley>
	* java/com/townleyenterprises/command/CommandOption.java

	  Fixed default option handling.  Options now return
	  default values even when not matched.
	  
	  Added support for encapsulating the parsing of option
	  values using getArgValue() instead of getArg().

2004-01-26 Andrew S. Townley <atownley>
	* Added JUnit unit tests for everything in the
	  com.townleyenterprises.common package
	
	* Added unit tests for the
	  com.townleyenterprises.command.CommandParser class

	* java/com/townleyenterprises/command/CommandOption.java
	  java/com/townleyenterprises/command/CommandParser.java
	  java/com/townleyenterprises/command/RepeatableCommandOption.java

	  Added support for parsing multiple argument lists with
	  the same set of options.  Previously, state was set once,
	  but you could parse multiple times.  Now accurate results
	  are reported for each argument list.

	  Added warning message for registering options that will
	  override options already registered.  The last one
	  registered will get matched, but at least it doesn't
	  silently continue.

	  Added RuntimeException when trying to create a CommandParser
	  with a long switch with length 1.  This doesn't work right
	  now and was too difficult to allow.  This will be fixed
	  when we properly handle "traditional" UNIX arguments.
	  
2004-01-22 Andrew S. Townley <atownley>
	* build.xml

	  Removed dynamic javadoc title stuff because it doesn't
	  get processed by ant.  Now have to manually update the
	  javadoc title for each release -- yuck.

	* java/com/townleyenterprises/filter/SubstringFilter.java

	  Added backward-compatible constructor for case-sensitive
	  comparisons.
	
	* 2.1.0-pre3 Released internally.

2004-01-21 Andrew S. Townley <atownley>
	* build.xml
	  
	  Checked in changes made yesterday to support dynamic
	  generation of source files from .in files as well as
	  clean them up correctly.

	* ChangeLog

	  Fixed source path references.
	
	* 2.1.0-pre2 Released internally.

2003-12-17 Andrew S. Townley <atownley>
	* java/com/townleyenterprises/common/AppConfig.java
	  java/com/townleyenterprises/common/ConfigLoader.java

	  Support for tracking the registered config loaders
	  to determine which properties were being loaded from
	  where.  ConfigLoader now tracks information about how
	  it was configured.

2003-12-04 Andrew S. Townley <atownley>

	* 2.1.0-pre1 Released internally.

2003-11-26 Andrew S. Townley <atownley>
	* java/com/townleyenterprises/swing/TAboutBox.java
	  
	  Added basic about box.

2003-11-24 Andrew S. Townley <atownley>
	*  java/com/townleyenterprises/event/TaskEvent.java
	   java/com/townleyenterprises/event/TaskListener.java

	  Added support for task listeners for monitored tasks.

2003-11-20 Andrew S. Townley <atownley>
	* java/com/townleyenterprises/swing/AbstractMonitoredTask.java
	  java/com/townleyenterprises/swing/MonitoredTask.java
	  java/com/townleyenterprises/swing/TStatusBar.java

	  Added mechanism for monitored background GUI tasks and
	  implementation of status bar to support progress monitoring.

	* java/com/townleyenterprises/swing/AbstractUIBuilder.java
	  java/com/townleyenterprises/swing/ResourceUIBuilder.java
	  java/com/townleyenterprises/swing/UIBuilder.java

	  Added mechanism for dynamic menu generation based on
	  mechanisms in the JFC demo Notepad.

	* java/com/townleyenterprises/swing/ResourceLoader.java
	  java/com/townleyenterprises/swing/ResourceProvider.java

	  Added mechanism for generic resource loading.

	* java/com/townleyenterprises/swing/SpringHints.java

	  Added helper class for the SpringLayout.

	* java/com/townleyenterprises/swing/SwingWorker.java

	  Added SwingWorker from Java JFC Tutorial.

	* java/com/townleyenterprises/swing/ThemeLoader.java
	  java/com/townleyenterprises/swing/resources/default.theme
	  
	  Added dynamic, property-file driven Swing theme.

	* java/com/townleyenterprises/command/AbstractCommandListener.java

	  Added abstract base class so optionMatched() is not
	  necessary to implement when using OO-Parsing

2003-06-08 Andrew S. Townley <atownley>

	* java/com/townleyenterprises/filter/package.html

	  Updated the JavaDoc for the package to actually
	  reflect reality and put in some more appropriate
	  examples.

	* java/com/townleyenterprises/command/CommandParser.java

	  Fixed several small bugs with supporting only
	  options with short versions, printing usage for
	  obscenely long description text.

	  Changed behavior on unknown options or other
	  problems detected by the parser to use usage
	  method rather than help to reduce the output in
	  these cases.

	  Added mechanism to force CommandParser to exit on
	  error if an option requiring a value was missing
	  an argument.

	* java/com/townleyenterprises/command/RepeatableCommandOption.java
	  java/com/townleyenterprises/command/DelimitedCommandOption.java

	  Actually implemented real versions of these based
	  on further thinking after writing the examples for
	  the site.  The delimited one was necessary for
	  easily migrating some existing work.
	
	* java/com/townleyenterprises/filter/StringFilter.java
	  java/com/townleyenterprises/filter/SubstringFilter.java

	  Added StringFilter to deal with case sensitivity.
	  Changed SubstringFilter to be derived from
	  StringFilter to also deal with case insensitive
	  searches.

	  Fixed potential bugs in the way properties were
	  being checked if any of the values were null.

	* java/com/townleyenterprises/filter/Logical*Filter.java
	  java/com/townleyenterprises/filter/QueryFilter.java

	  Added toString() implementations so that they
	  could be printed for debugging.

	* java/com/townleyenterprises/common/PropertyProxy.java

	  Renamed getProxyClass method to getSubjectClass
	  since you're getting the class of the thing being
	  proxied, not the proxy proper.

2003-06-07 Andrew S. Townley <atownley@sourceforge.net>

	*  2.0-Beta2 initial code release via SourceForge

